{"/dockerfile":"FROM hayd/ubuntu-deno:1.5.2\n\nEXPOSE 3000\nWORKDIR /usr/app\n\nRUN deno install -qAfn vr --no-check https://deno.land/x/velociraptor@1.4.0/cli.ts\n\nCOPY src/deps.ts ./src/deps.ts\nRUN deno cache --no-check --unstable src/deps.ts\n\nADD . .\nRUN deno cache --no-check --unstable src/server/server.ts\n\nENTRYPOINT [ \"/usr/local/bin/vr\" ]\n\nCMD [\"local\"]","/.env":"PORT=3000","/docker-compose.yml":"version: '3.7'\n\nservices:\n  api:\n    build:\n      context: ./\n      dockerfile: dockerfile\n    image: api:dev\n    container_name: api\n    restart: always\n    volumes:\n      - ./:/usr/app\n    ports:\n      - 3000:3000\n    environment:\n      - PORT=3000\n","/.vscode/settings.json":"{\n  \"deno.enable\": true,\n  \"deno.lint\": false,\n  \"deno.unstable\": true\n}\n","/scripts.yml":"scripts:\n  local: deno run --allow-net --allow-env --allow-read src/server/server.ts\n  build: docker-compose build\n  start: docker-compose up\n  dev: docker-compose up --build\n","/src/server/routers/test.ts":"import { OpineRequest, OpineResponse } from '../../deps.ts';\n\nexport function test(req: OpineRequest, res: OpineResponse) {\n  res.send({\n    hello: 'world',\n  });\n}\n","/src/server/routers/index.ts":"export { test } from './test.ts';\n","/src/server/server.ts":"import { opine, env } from '../deps.ts';\nimport * as routers from './routers/index.ts';\n\nObject.entries(env()).forEach(([key, value]) => Deno.env.set(key, value));\n\nconst app = opine();\n\napp.use(routers.test);\n\napp.listen(+Deno.env.get('PORT')!, () => console.log(`App listening on port: ${Deno.env.get('PORT')}`));\n","/src/deps.ts":"export { opine } from 'https://deno.land/x/opine@2.1.1/mod.ts';\nexport { config as env } from 'https://deno.land/x/dotenv/mod.ts';\nexport type { OpineRequest, OpineResponse } from 'https://deno.land/x/opine@2.1.1/mod.ts';\n"}