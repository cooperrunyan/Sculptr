{"/dockerfile":"FROM hayd/ubuntu-deno:1.5.2\n\nEXPOSE 3000\nWORKDIR /usr/app\n\nRUN deno install -qAfn vr --no-check https://deno.land/x/velociraptor@1.4.0/cli.ts\n\nCOPY src/deps.ts ./src/deps.js\nRUN deno cache --no-check --unstable src/deps.js\n\nADD . .\nRUN deno cache --no-check --unstable src/server/server.js\n\nENTRYPOINT [ \"/usr/local/bin/vr\" ]\n\nCMD [\"local\"]","/.env":"PORT=3000","/docker-compose.yml":"version: '3.7'\n\nservices:\n  api:\n    build:\n      context: ./\n      dockerfile: dockerfile\n    image: api:dev\n    container_name: api\n    restart: always\n    volumes:\n      - ./:/usr/app\n    ports:\n      - 3000:3000\n    environment:\n      - PORT=3000\n","/.vscode/settings.json":"{\n  \"deno.enable\": true,\n  \"deno.lint\": false,\n  \"deno.unstable\": true\n}\n","/scripts.yml":"scripts:\n  local: deno run --allow-net --allow-env --allow-read src/server/server.js\n  build: docker-compose build\n  start: docker-compose up\n  dev: docker-compose up --build\n","/src/deps.js":"export * as Drash from 'https://deno.land/x/drash@v2.5.2/mod.ts';\nexport { config as env } from 'https://deno.land/x/dotenv/mod.ts';\n","/src/server/server.js":"import { Drash, env } from '../deps.js';\nimport * as resources from './resources/index.js';\n\nObject.entries(env()).forEach(([key, value]) => Deno.env.set(key, value));\n\nconst server = new Drash.Server({\n  hostname: '127.0.0.1',\n  port: +Deno.env.get('PORT'),\n  protocol: 'http',\n  resources: Object.values(resources),\n});\n\nserver.run();\nconsole.log(`App running on port: ${Deno.env.get('PORT')}`);\n","/src/server/resources/Test.js":"import { Drash } from '../../deps.js';\n\nexport class Test extends Drash.Resource {\n  paths = ['/api/test'];\n\n  GET(req, res) {\n    return res.json({\n      hello: 'world',\n    });\n  }\n}\n","/src/server/resources/index.js":"export { Test } from './Test.js';\n"}